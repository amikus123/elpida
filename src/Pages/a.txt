// ProtectedRoute.tsx
import React, { Component, useContext } from "react";
import { Route, Redirect } from "react-router-dom";
import { ROUTES } from "../../constans/routes";
import { UserContext } from "../../context/UserContext";

// We are taking in the component that should be rendered if the user is authed
// We are also passing the rest of the props to the <Route /> component such as
// exact & the path
const ProtectedRoute = (props:{props:any}) => {
  // Getting the value from our cool custom hook
  const { currentUser } = useContext(UserContext);

  return (
    <Route
      {...props}
      render={(props) => {
        // If the user is authed render the component
        if (currentUser !== null) {
          return <Component {...props} {...props} />;
        } else {
          // If they are not then we need to redirect to a public page
          return (
            <Redirect
              to={{
                pathname: ROUTES.HOME,
                state: {
                  from: props.location,
                },
              }}
            />
          );
        }
      }}
    />
  );
};

export default ProtectedRoute;
